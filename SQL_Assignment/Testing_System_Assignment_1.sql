DROP DATABASE IF EXISTS TestingSystem_1;
CREATE DATABASE TestingSystem_1;
USE TestingSystem_1;

CREATE TABLE Department(
	DepartmentID 	TINYINT UNSIGNED AUTO_INCREMENT NOT NULL
    ,DepartmentName VARCHAR(255) NOT NULL
    ,PRIMARY KEY(DepartmentID)
); 

CREATE TABLE `Position`(
	PositionID 		TINYINT UNSIGNED AUTO_INCREMENT NOT NULL
    ,PositionName 	ENUM('Dev', 'Test', 'Scrum Master', 'PM')
	,PRIMARY KEY(PositionID)
);

CREATE TABLE `Account`(
	AccountID 		TINYINT UNSIGNED AUTO_INCREMENT NOT NULL 
    ,Email 			VARCHAR(255) NOT NULL
    ,Username 		VARCHAR(255) NOT NULL
    ,Fullname 		VARCHAR(255) NOT NULL
    ,DepartmentID 	TINYINT UNSIGNED NOT NULL
	,PositionID 	TINYINT UNSIGNED NOT NULL
	,CreateDate 	DATETIME
	,PRIMARY KEY(AccountID)
    ,FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID)
	,FOREIGN KEY (PositionID) REFERENCES `Position`(PositionID)

);

CREATE TABLE `Group`(
	GroupID 	TINYINT UNSIGNED NOT NULL AUTO_INCREMENT
    ,GroupName 	VARCHAR(255) NOT NULL
	,CreatorID 	TINYINT UNSIGNED NOT NULL
    ,CreateDate DATE NOT NULL
    ,PRIMARY KEY(GroupID)
    ,FOREIGN KEY (CreatorID) REFERENCES `Account`(AccountID)
);
CREATE TABLE GroupAccount(
	GroupID 	TINYINT UNSIGNED NOT NULL
    ,AccountID 	TINYINT UNSIGNED NOT NULL
    ,JoinDate 	DATETIME NOT NULL
    ,FOREIGN KEY(GroupID) REFERENCES `Group`(GroupID)
    ,FOREIGN KEY(AccountID) REFERENCES `Account`(AccountID)

);
CREATE TABLE TypeQuestion(
	TypeID 		TINYINT UNSIGNED AUTO_INCREMENT NOT NULL
    ,TypeName 	ENUM ('Essay', 'Multiple-choice')
	,PRIMARY KEY(TypeID)
);
CREATE TABLE CategoryQuestion(
	CategoryID 		TINYINT UNSIGNED AUTO_INCREMENT NOT NULL
    ,CategoryName 	VARCHAR(255)
	,PRIMARY KEY(CategoryID)
);
CREATE TABLE Question(
	QuestionID		TINYINT UNSIGNED AUTO_INCREMENT NOT NULL
	,Content 		VARCHAR(1000)
	,CategoryID 	TINYINT UNSIGNED NOT NULL
	,TypeID			TINYINT UNSIGNED NOT NULL
	,CreatorID 		TINYINT UNSIGNED NOT NULL
	,CreateDate		DATE NOT NULL
    ,PRIMARY KEY(QuestionID)
	,FOREIGN KEY(CategoryID) REFERENCES CategoryQuestion(CategoryID)
    ,FOREIGN KEY(TypeID) REFERENCES TypeQuestion(TypeID)
    ,FOREIGN KEY(CreatorID) REFERENCES `Account`(AccountID)
);

CREATE TABLE Answer(
	AnswerID 		TINYINT UNSIGNED AUTO_INCREMENT NOT NULL
	,Content		VARCHAR(1000)
	,QuestionID		TINYINT UNSIGNED NOT NULL
	,isCorrect		BOOLEAN
    ,PRIMARY KEY(AnswerID)
    ,FOREIGN KEY(QuestionID) REFERENCES Question(QuestionID)
);

CREATE TABLE Exam(
	ExamID 			TINYINT UNSIGNED AUTO_INCREMENT NOT NULL
	,`Code`			VARCHAR(50) NOT NULL
	,Title			VARCHAR(50) NOT NULL
	,CategoryID		TINYINT UNSIGNED NOT NULL
	,Duration		TINYINT UNSIGNED NOT NULL
	,CreatorID		TINYINT UNSIGNED NOT NULL
	,CreateDate 	DATE NOT NULL
    ,PRIMARY KEY(ExamID)
    ,FOREIGN KEY(CategoryID) REFERENCES CategoryQuestion(CategoryID)
    ,FOREIGN KEY(CreatorID) REFERENCES `Account`(AccountID)
);
CREATE TABLE ExamQuestion(
	ExamID 			TINYINT UNSIGNED NOT NULL
    ,QuestionID		TINYINT UNSIGNED NOT NULL
    ,FOREIGN KEY(ExamID) REFERENCES Exam(ExamID)
    ,FOREIGN KEY(QuestionID) REFERENCES Question(QuestionID)
);